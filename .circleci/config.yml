version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.2-stretch-node-browsers
    steps:
      - checkout

      - run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      - restore_cache:
          keys:
          # "composer.json" can be used if "composer.json"
          # is not committed to the repository.
          - v1-dependencies-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache
      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: touch storage/testing.sqlite
      #- run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      # this example uses codecept but you're not limited to it
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run --xml result.xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output


    deploy:
        machine:
          image: circleci/classic:edge
        steps:
          - add_ssh_keys:
              fingerprints:
                - "0b:24:a3:43:c2:75:02:c8:ec:92:a8:d8:bb:b3:5d:8a"
          - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /docker-fight_navi/ && sudo git pull origin master'


workflows:
    version: 2
    build_and_deploy:
      jobs:
        - build
        - deploy:
            requires:
              - build
            filters:
              branches:
                only: master
